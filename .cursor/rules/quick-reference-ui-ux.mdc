---
alwaysApply: true
---

# Quick Reference: UI/UX Implementation Guide

## ðŸš€ **Quick Start Template**

```tsx
// Copy this template for any new page
export default function PageName() {
  return (
    <div className="min-h-screen bg-gray-50">
      <Tabs defaultValue="default" className="space-y-0">
        {/* Enhanced Sticky Tabs */}
        <div className="sticky top-20 z-30 bg-white border-b border-gray-200 -mx-6 px-4 sm:px-6 py-3 shadow-sm">
          <div className="overflow-x-auto">
            <TabsList className="grid w-full grid-cols-3 min-w-max bg-gray-100">
              <TabsTrigger 
                value="tab1" 
                className="text-xs sm:text-sm px-3 sm:px-6 py-2 data-[state=active]:bg-white data-[state=active]:shadow-sm transition-all duration-200"
              >
                Tab Label
              </TabsTrigger>
            </TabsList>
          </div>
        </div>

        {/* Content Container */}
        <div className="px-6 py-6">
          <TabsContent value="tab1" className="space-y-6 mt-0">
            {/* Your page content here */}
          </TabsContent>
        </div>
      </Tabs>
    </div>
  );
}
```

## ðŸŽ¨ **Essential CSS Classes**

### **Card Standards:**
```tsx
// Professional Card
<Card className="border-l-4 border-l-blue-500 shadow-sm hover:shadow-md transition-shadow duration-200">

// Card Header
<CardHeader className="pb-4">
  <CardTitle className="text-lg flex items-center gap-2">
    <div className="w-3 h-3 bg-blue-500 rounded-full animate-pulse"></div>
    Title
    <span className="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded-full font-medium">Live</span>
  </CardTitle>
  <CardDescription className="text-sm text-gray-600">Description</CardDescription>
</CardHeader>

// Card Content
<CardContent className="space-y-3">
  {/* Content */}
</CardContent>
```

### **Form Standards:**
```tsx
// Enhanced Input
<div className="space-y-2">
  <Label htmlFor="input" className="text-sm font-medium text-gray-700">Label</Label>
  <Input
    id="input"
    className="h-11 border-gray-300 focus:border-blue-500 focus:ring-blue-500"
    placeholder="Placeholder"
  />
</div>

// Enhanced Select
<Select>
  <SelectTrigger className="h-11 border-gray-300 focus:border-blue-500 focus:ring-blue-500">
    <SelectValue placeholder="Select option" />
  </SelectTrigger>
  <SelectContent>
    {/* Options */}
  </SelectContent>
</Select>
```

### **Button Standards:**
```tsx
// Enhanced Button
<Button 
  variant="outline"
  size="sm"
  className="transition-all duration-200 hover:scale-105 hover:shadow-md flex-shrink-0"
>
  <Icon className="h-4 w-4 mr-2" />
  <span className="hidden sm:inline">Full Label</span>
  <span className="sm:hidden">Short</span>
</Button>
```

### **Loading States:**
```tsx
// Professional Loading
{isLoading ? (
  <Card className="border-l-4 border-l-blue-500">
    <CardContent className="flex items-center justify-center p-12">
      <div className="text-center">
        <RefreshCw className="h-8 w-8 animate-spin text-blue-600 mx-auto mb-4" />
        <p className="text-lg font-medium text-gray-900">Loading data...</p>
        <p className="text-sm text-gray-600 mt-2">Please wait while we fetch your data</p>
      </div>
    </CardContent>
  </Card>
) : (
  // Content
)}
```

### **Error States:**
```tsx
// Professional Error
{error ? (
  <Card className="border-l-4 border-l-red-500">
    <CardContent className="flex items-center justify-center p-12">
      <div className="text-center">
        <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <AlertCircle className="h-6 w-6 text-red-600" />
        </div>
        <p className="text-lg font-medium text-red-900 mb-2">Error loading data</p>
        <p className="text-sm text-gray-600 mb-4">{error.message}</p>
        <Button 
          variant="outline" 
          onClick={() => window.location.reload()}
          className="border-red-300 text-red-700 hover:bg-red-50"
        >
          <RefreshCw className="h-4 w-4 mr-2" />
          Try Again
        </Button>
      </div>
    </CardContent>
  </Card>
) : (
  // Content
)}
```

## ðŸ“± **Responsive Grid Patterns**

### **Common Grid Layouts:**
```tsx
// 4-column metrics (mobile-first)
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6">

// 3-column cards
<div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6">

// 2-column forms
<div className="grid grid-cols-1 sm:grid-cols-2 gap-4">

// Flexible content
<div className="flex flex-col sm:flex-row items-start sm:items-center gap-4">
```

## ðŸŽ¯ **Color System**

### **Border Accent Colors:**
- **Primary**: `border-l-4 border-l-blue-500`
- **Success**: `border-l-4 border-l-green-500`
- **Error**: `border-l-4 border-l-red-500`
- **Warning**: `border-l-4 border-l-orange-500`
- **Info**: `border-l-4 border-l-purple-500`

### **Status Colors:**
- **Success**: `text-green-600 bg-green-50 border-green-200`
- **Error**: `text-red-600 bg-red-50 border-red-200`
- **Warning**: `text-orange-600 bg-orange-50 border-orange-200`
- **Info**: `text-blue-600 bg-blue-50 border-blue-200`

### **Button Colors:**
- **Primary**: `bg-blue-600 hover:bg-blue-700`
- **Success**: `bg-green-600 hover:bg-green-700`
- **Danger**: `bg-red-600 hover:bg-red-700`
- **Warning**: `bg-orange-600 hover:bg-orange-700`

## ðŸ”§ **Common Patterns**

### **Icon Containers:**
```tsx
// Standard icon container
<div className="p-3 bg-blue-100 rounded-xl shadow-sm">
  <Icon className="h-6 w-6 text-blue-600" />
</div>

// Status indicator
<div className="w-3 h-3 bg-green-500 rounded-full animate-pulse"></div>

// Badge
<span className="text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full font-medium">
  Live Data
</span>
```

### **Card Content Patterns:**
```tsx
// Metric display
<div className="p-4 bg-green-50 rounded-lg border border-green-200">
  <div className="flex justify-between items-center">
    <span className="text-gray-700 font-medium">Label</span>
    <span className="font-bold text-xl text-green-600">Value</span>
  </div>
  <div className="text-xs text-green-600 mt-1">Description</div>
</div>

// Action buttons
<div className="flex flex-wrap items-center gap-2 sm:gap-3">
  <Button size="sm" variant="outline" className="flex-shrink-0">
    Action
  </Button>
</div>
```

## âš¡ **Performance Tips**

### **Optimization Rules:**
- Use `flex-shrink-0` for buttons and icons
- Use `truncate` for long text
- Use `line-clamp-2` for descriptions
- Use `transition-all duration-200` for smooth animations
- Use `hover:scale-105 hover:shadow-md` for interactive elements

### **Mobile Optimization:**
- Use `hidden sm:inline` and `sm:hidden` for responsive text
- Use `h-11` for touch-friendly inputs
- Use `gap-2 sm:gap-3` for responsive spacing
- Use `text-xs sm:text-sm` for responsive typography

## ðŸŽ¨ **Visual Hierarchy**

### **Typography Scale:**
- **Page Title**: `text-xl lg:text-2xl font-bold`
- **Card Title**: `text-lg font-bold`
- **Section Title**: `text-sm font-medium`
- **Body Text**: `text-sm text-gray-600`
- **Caption**: `text-xs text-gray-500`

### **Spacing Scale:**
- **Card Padding**: `p-4` or `p-6`
- **Section Spacing**: `space-y-6`
- **Item Spacing**: `space-y-3` or `space-y-4`
- **Grid Gaps**: `gap-4 sm:gap-6`

## âœ… **Final Checklist**

Before submitting any page:

- [ ] **Container**: `min-h-screen bg-gray-50`
- [ ] **Tabs**: Enhanced sticky navigation
- [ ] **Cards**: Professional design with shadows
- [ ] **Forms**: Enhanced inputs with focus states
- [ ] **Loading**: Card-based with descriptive text
- [ ] **Errors**: Professional handling with retry
- [ ] **Buttons**: Enhanced with responsive labels
- [ ] **Grids**: Mobile-first responsive
- [ ] **Mobile**: Touch-friendly spacing
- [ ] **Performance**: Minimal DOM nesting
- [ ] **Accessibility**: Proper contrast and focus
- [ ] **Consistency**: Matches design system

This quick reference ensures consistent implementation across all pages!